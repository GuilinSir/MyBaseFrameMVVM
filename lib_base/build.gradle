import com.guilin.mybaseframemvvm.build.*
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdk ProjectBuildConfig.compileSdkVersion
    defaultConfig {
        minSdkVersion ProjectBuildConfig.minSdkVersion
        targetSdkVersion ProjectBuildConfig.targetSdkVersion
        versionCode ProjectBuildConfig.versionCode
        versionName ProjectBuildConfig.versionName
        testInstrumentationRunner AndroidX.AndroidJUnitRunner
        consumerProguardFiles "consumer-rules.pro"//设置 发布的 AAR 依赖库 对应的混淆文件 ;
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    resourcePrefix "base_"

    buildFeatures {
        buildConfig true
    }
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    api AndroidX.CoreKtx
    api AndroidX.AppCompat
    api AndroidX.ConstraintLayout
    api AndroidX.ActivityKtx
    api AndroidX.FragmentKtx
    api AndroidX.ViewBinding
    api AndroidX.MultiDex


    api Kotlin.Kotlin
    api Kotlin.CoroutinesCore
    api Kotlin.CoroutinesAndroid

    api JetPack.LifecycleRuntimeKtx
    api JetPack.LifecycleViewModel
    api JetPack.LifecycleViewModelKtx

    api GitHub.OkHttp
    api GitHub.OkHttpInterceptorLogging
    api GitHub.Retrofit
    api GitHub.RetrofitConverterGson
    api GitHub.Gson
    api GitHub.MMKV
    api GitHub.AutoSize
    api GitHub.Glide
    api GitHub.ARoute
    api GitHub.RecyclerViewAdapter
    api GitHub.StatusBar
    api GitHub.EventBus
    api GitHub.PermissionX


    kapt GitHub.GlideCompiler
    kapt GitHub.ARouteCompiler
    kapt GitHub.EventBusAPT

    debugApi GitHub.LeakCanary
    debugApi GitHub.Chuck
    releaseApi GitHub.ChuckNoOp


}